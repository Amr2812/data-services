version: '3.8'

services:
  cassandra-node1:
    image: cassandra:latest
    container_name: cassandra-node1
    hostname: cassandra-node1
    restart: always
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-node1
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_CLUSTER_NAME=data_services
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    networks:
      - dataservices-network
    volumes:
      - cassandra_data1:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  cassandra-node2:
    image: cassandra:latest
    container_name: cassandra-node2
    hostname: cassandra-node2
    restart: always
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-node2
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_CLUSTER_NAME=data_services
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    networks:
      - dataservices-network
    depends_on:
      cassandra-node1:
        condition: service_healthy
    volumes:
      - cassandra_data2:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  cassandra-node3:
    image: cassandra:latest
    container_name: cassandra-node3
    hostname: cassandra-node3
    restart: always
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-node3
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_CLUSTER_NAME=data_services
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    networks:
      - dataservices-network
    depends_on:
      cassandra-node1:
        condition: service_healthy
      cassandra-node2:
        condition: service_healthy
    volumes:
      - cassandra_data3:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 180s

  cassandra-init:
    image: cassandra:latest
    depends_on:
      cassandra-node1:
        condition: service_healthy
      cassandra-node2:
        condition: service_healthy
      cassandra-node3:
        condition: service_healthy
    networks:
      - dataservices-network
    volumes:
      - ./init.cql:/init.cql
    command: >
      bash -c '
      while ! cqlsh cassandra-node1 -e "describe cluster" ; do
        echo "Waiting for Cassandra cluster to be ready...";
        sleep 10;
      done;
      echo "Initializing database...";
      cqlsh cassandra-node1 -f /init.cql;
      '
    restart: on-failure

  data-service1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - dataservices-network
    depends_on:
      cassandra-node1:
        condition: service_healthy
      cassandra-node2:
        condition: service_healthy
      cassandra-node3:
        condition: service_healthy
    environment:
      - PORT=50051
      - CASSANDRA_CONTACT_POINTS=cassandra-node1,cassandra-node2,cassandra-node3
      - CASSANDRA_LOCAL_DC=datacenter1
    restart: always

volumes:
  cassandra_data1:
  cassandra_data2:
  cassandra_data3:

networks:
  dataservices-network:
    driver: bridge